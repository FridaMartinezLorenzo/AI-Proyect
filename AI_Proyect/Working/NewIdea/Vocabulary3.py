
import pandas as pd
from sklearn.preprocessing import OneHotEncoder, MinMaxScaler

# Load the dataset
EHMS = pd.read_csv('../../WUSTL-EHMS/wustl-ehms-2020.csv')
df = pd.DataFrame(EHMS)

# Define the columns to consider
columns_to_consider = ['Sport', 'SrcLoad', 'DstLoad', 'SIntPkt', 'DIntPkt', 'SrcJitter', 'DstJitter', 'Dur', 'Load', 'Rate', 
                       'SrcMac', 'Packet_num', 'Temp', 'SpO2', 'Pulse_Rate', 'SYS', 'DIA', 'Heart_rate', 'Resp_Rate', 'ST']

# Filter the dataset with the specified columns
df_filtered = df[columns_to_consider]

#First we work with the numeric columns
# Initialize MinMaxScaler
scaler = MinMaxScaler()

# Select numeric columns
numeric_columns = df_filtered.select_dtypes(include=['float64', 'int64']).columns

# Apply MinMaxScaler to numeric columns
df_filtered[numeric_columns] = scaler.fit_transform(df_filtered[numeric_columns])

# Create a dictionary to hold the vocabulary for numeric columns
numeric_dict = {}
for column in numeric_columns:
    numeric_dict[column] = df_filtered[column].unique()


# Now we work with the categorical columns
# Select only the categorical columns to apply One-Hot Encoding to
categorical_columns = df_filtered.select_dtypes(include=['object']).columns
print("Categorical Columns:", categorical_columns)

# Initialize OneHotEncoder
encoder = OneHotEncoder(sparse_output=False)

# Fit and transform the categorical data
encoded_data = encoder.fit_transform(df_filtered[categorical_columns])

# Get the feature names generated by the One-Hot Encoder
encoded_feature_names = encoder.get_feature_names_out(categorical_columns)

# Create a DataFrame with the encoded data
encoded_df = pd.DataFrame(encoded_data, columns=encoded_feature_names)

# Initialize the dictionary to hold the feature names and their One-Hot encodings
encoding_dict = {}

# For each categorical column, associate the value and its One-Hot encoded vector
for column in categorical_columns:
    # Get the unique values from the original column
    unique_values = df_filtered[column].unique()

    # Create a dictionary where the unique value is the key and the One-Hot vector is the value
    value_encoding_dict = {}
    for val in unique_values:
        # Find the index of the unique value in the original column
        indices = df_filtered.index[df_filtered[column] == val].tolist()
        # Get the corresponding One-Hot encoded vectors
        encoding_vector = encoded_df.iloc[indices].mean(axis=0).tolist()  # Use the mean to represent the encoding vector
        value_encoding_dict[str(val)] = encoding_vector

    # Store this dictionary in the main dictionary under the feature name
    encoding_dict[column] = value_encoding_dict

# Drop the original categorical columns and add the encoded ones
df_filtered = df_filtered.drop(columns=categorical_columns)
df_filtered = pd.concat([df_filtered.reset_index(drop=True), encoded_df], axis=1)

#Print the list of the new columns, adding the one-hot encoded columns, justa feature name
print("New columns in the DataFrame:")
print(encoded_df.columns.tolist())

# Output the numeric dictionary
print("Numeric Vocabulary:")
for key, value in numeric_dict.items():
    print(f"{key} : {value}")
    
# Output the One-Hot Encoding dictionary
print("One-Hot Encoding Dictionary:")
for key, value in encoding_dict.items():
    print(f"{key}")

# Output the final DataFrame with One-Hot Encoding and normalized numeric columns
print(df_filtered.head())
